% Load independent and dependent variables.FM = load('/home/emo4002/colossus_shared3/pons_sfmodelling/results/degreeFC/base_vs_FU_FM.mat');FM=FM.rec';agesex = readtable('/home/emo4002/colossus_shared3/pons_sfmodelling/strokepts/agesex_pts.csv')agesex=table2array(agesex);ch_degree = load('/home/emo4002/colossus_shared3/pons_sfmodelling/results/degreeFC/base_vs_FU_change_degree_allsubjects.mat');ch_degree=cell2mat(ch_degree.change_degree');sdc=load('/home/emo4002/colossus_shared3/pons_sfmodelling/results/degreeFC/sdc.mat');sdc=sdc.sdc;% Y are the dependent variables% i.e. fugl meyer scoersY = FM;Y=normalize(Y);% X are the independent variables / predictors% i.e. change in degree from S5 to S1.X1 = ch_degree;P = sum(X1);X1 = X1(:,P~=0);X=[X1 agesex];X = normalize(X);[ni,nj]=size(X);nk=size(Y,2);% nfact gives the number of factors/latent variables% to keep for the prediction of Y and for the computation% of B_pls% Leave-one-out crossvalidation; determine the optimal number of components% with -1 subject each time.nfact=20; %start with many components, PLS_jack_svds will output Predicted Residual Sum of Squares (PRESS) automatically% n components = comp at which PRESS is lowest.for i=1:23    X(:,i)=[]; %take out one subject at a time.[T,P,W,Wstar,U,B,C,Bpls,Bpls_star,Xhat,...          Yhat,Yjack,R2x,R2y,RESSy,PRESSy,Q2,r2y_random,rv_random,...          Yhat4Press,Yhat4Ress]=PLS_jack_svds(X,Y,nfact);      PRESS{i}=PRESSy;end% plot the PRESS values across each fold of the leave one outpress=cell2mat(PRESS');avg=mean(press,1);sd=std(press);errorbar([1:20],avg',sd)% perform PLSR using # components identified using leave-one-out% xvalidationX=[X1 agesex];X = normalize(X);nfact=3 %change based on plot above;[T,P,W,Wstar,U,B,C,Bpls,Bpls_star,Xhat,...          Yhat,Yjack,R2x,R2y,RESSy,PRESSy,Q2,r2y_random,rv_random,...          Yhat4Press,Yhat4Ress]=PLS_jack_svds(X,Y,nfact);      %Calculate bootstrapped CIs using bias corrected percentile method.ci = bootci(250, {@PLS_svds,X}, 'type', 'cper', 'alpha', 0.05/length(ci));ci=ci(:,2:length(ci))';sig_rois=find(ci(:,1).*ci(:,2)>0);coeffs=Bpls_star(2:270);%first value here is irrelevantsig_roi_coeffs=coeffs(sig_rois); %extract beta coefficients of only significant ROIsinputdata=zeros(268,1);% set all other ROIs to have value = 0inputdata(sig_rois)=sig_roi_coeffs;chaco_to_brainnet(inputdata); %generate .node file with size & color scaled to beta coeffs.shenyeo=readtable('/home/emo4002/colossus_shared3/pons_sfmodelling/processing/shen_268_parcellation_networklabels.csv')shenyeo=table2array(shenyeo)result=shenyeo(sig_rois,2);% calculate distribution of R^2 values across bootstraps[bootstat, bootsam]=bootstrp(250, @PLS_svds_R2,X);histogram(bootstat(:,1))bootstat=bootstat';